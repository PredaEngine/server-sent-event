{"name":"Server-sent-event","tagline":"ServerSentEvent.php is a PHP class that allows you to emit events that can receiving Server-Sent Events in HTML5","body":"server-sent-event\r\n=================\r\n# JavaScript\r\n```javascript\r\nvar evtSource = new EventSource(\"ssedemo.php\");\r\nevtSource.onmessage = function(e) {\r\n  var newElement = document.createElement(\"li\");\r\n  \r\n  newElement.innerHTML = \"message: \" + e.data;\r\n  eventList.appendChild(newElement);\r\n}\r\n```\r\nSource : https://developer.mozilla.org/en-US/docs/Server-sent_events/Using_server-sent_events\r\nMore : http://dev.w3.org/html5/eventsource/\r\n# PHP\r\n### In ssedemo.php\r\n```php\r\n<?php\r\nheader(\"Content-Type: text/event-stream\");\r\nheader('Cache-Control: no-cache'); // recommended to prevent caching of event data.\r\n\r\ninclude 'ServerSentEvent.php';\r\n\r\n$event = ServerSentEvent::getInstance();\r\n$event->process(function($manager){\r\n\t$manager->send(array(\r\n\t\t'event' => 'ping',\r\n\t\t'data' => json_encode(array('time' =>time())),\r\n\t\t));\r\n},20);\r\n```\r\nThis code will send an event 'ping' to the client with data the current time (time()) every 20 seconds.\r\nThe array passed to the send function can contain three indexes:\r\n- id (optional) : the name of the event\r\n- event : The name of the event\r\n- data (array or string) : The data which will be send to the client\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}